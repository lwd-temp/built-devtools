{"version":3,"file":"Migration.js","sourceRoot":"","sources":["../../../../../../../front_end/models/trace/handlers/Migration.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,UAAU,MAAM,uBAAuB,CAAC;AACpD,OAAO,KAAK,GAAG,MAAM,iBAAiB,CAAC;AACvC,OAAO,KAAK,YAAY,MAAM,0BAA0B,CAAC;AACzD,OAAO,KAAK,MAAM,MAAM,oBAAoB,CAAC;AAC7C,OAAO,KAAK,eAAe,MAAM,6BAA6B,CAAC;AAC/D,OAAO,KAAK,eAAe,MAAM,6BAA6B,CAAC;AAC/D,OAAO,KAAK,WAAW,MAAM,yBAAyB,CAAC;AAGvD,OAAO,KAAK,gBAAgB,MAAM,8BAA8B,CAAC;AACjE,OAAO,KAAK,WAAW,MAAM,yBAAyB,CAAC;AACvD,OAAO,KAAK,QAAQ,MAAM,sBAAsB,CAAC;AACjD,OAAO,KAAK,OAAO,MAAM,qBAAqB,CAAC;AAI/C,+EAA+E;AAC/E,8EAA8E;AAC9E,mEAAmE;AACnE,MAAM,CAAC,MAAM,sBAAsB,GAAG;IACpC,UAAU;IACV,WAAW;IACX,eAAe;IACf,gBAAgB;IAChB,YAAY;IACZ,WAAW;IACX,GAAG;IACH,MAAM;IACN,eAAe;IACf,QAAQ;IACR,OAAO;CACR,CAAC","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Animations from './AnimationHandler.js';\nimport * as GPU from './GPUHandler.js';\nimport * as LayoutShifts from './LayoutShiftsHandler.js';\nimport * as Memory from './MemoryHandler.js';\nimport * as NetworkRequests from './NetworkRequestsHandler.js';\nimport * as PageLoadMetrics from './PageLoadMetricsHandler.js';\nimport * as Screenshots from './ScreenshotsHandler.js';\nimport type * as Renderer from './RendererHandler.js';\nimport type * as Samples from './SamplesHandler.js';\nimport * as UserInteractions from './UserInteractionsHandler.js';\nimport * as UserTimings from './UserTimingsHandler.js';\nimport * as Warnings from './WarningsHandler.js';\nimport * as Workers from './WorkersHandler.js';\n\nimport type * as Types from './types.js';\n\n// As we migrate the data engine we are incrementally enabling the new handlers\n// one by one, so we do not waste effort parsing data that we do not use. This\n// object should be updated when we add a new handler to enable it.\nexport const ENABLED_TRACE_HANDLERS = {\n  Animations,\n  UserTimings,\n  PageLoadMetrics,\n  UserInteractions,\n  LayoutShifts,\n  Screenshots,\n  GPU,\n  Memory,\n  NetworkRequests,\n  Warnings,\n  Workers,\n};\n\nexport type EnabledHandlersDuringMigration = typeof ENABLED_TRACE_HANDLERS;\n\n// Renderer and Samples handler are only executed when the panel is run\n// from the component examples server. Thus we mark them as optional\n// properties during the migration.\nexport type PartialTraceData = Readonly<Types.EnabledHandlerDataWithMeta<EnabledHandlersDuringMigration>>&{\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  readonly Renderer?: Readonly<ReturnType<typeof Renderer['data']>>,\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  readonly Samples?: Readonly<ReturnType<typeof Samples['data']>>,\n};\n"]}