{"version":3,"file":"ConsoleMessageSource.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/explain/sources/ConsoleMessageSource.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport * as Bindings from '../../../models/bindings/bindings.js';\nimport type * as Console from '../../console/console.js';\n\nexport class ConsoleMessageSource {\n  #consoleMessage: Console.ConsoleViewMessage.ConsoleViewMessage;\n  constructor(consoleMessage: Console.ConsoleViewMessage.ConsoleViewMessage) {\n    this.#consoleMessage = consoleMessage;\n  }\n\n  getAnchor(): AnchorBox {\n    const rect = this.#consoleMessage.contentElement().getBoundingClientRect();\n    return new AnchorBox(rect.left, rect.top, rect.width, rect.height);\n  }\n\n  async getPrompt(): Promise<string> {\n    const callframe = this.#consoleMessage.consoleMessage().stackTrace?.callFrames[0];\n    const runtimeModel = this.#consoleMessage.consoleMessage().runtimeModel();\n    const debuggerModel = runtimeModel?.debuggerModel();\n\n    const relatedCode: string[] = [];\n    let relatedCodeSize = 0;\n\n    if (callframe && debuggerModel) {\n      const rawLocation = new SDK.DebuggerModel.Location(\n          debuggerModel, callframe.scriptId, callframe.lineNumber, callframe.columnNumber);\n      const mappedLocation =\n          await Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance().rawLocationToUILocation(\n              rawLocation);\n      const content = await mappedLocation?.uiSourceCode.requestContent();\n      const text = !content?.isEncoded && content?.content ? content.content : '';\n      if (text) {\n        const lines = text.split('\\n');\n        let currentLineNumber = mappedLocation?.lineNumber as number;\n        while (lines[currentLineNumber] !== undefined && (relatedCodeSize + lines[currentLineNumber].length < 500)) {\n          relatedCode.push(lines[currentLineNumber]);\n          relatedCodeSize += lines[currentLineNumber].length;\n          currentLineNumber--;\n        }\n        relatedCode.reverse();\n        currentLineNumber = (mappedLocation?.lineNumber as number) + 1;\n        while (lines[currentLineNumber] !== undefined && (relatedCodeSize + lines[currentLineNumber].length < 1000)) {\n          relatedCode.push(lines[currentLineNumber]);\n          relatedCodeSize += lines[currentLineNumber].length;\n          currentLineNumber++;\n        }\n      }\n    }\n\n    return `You are an expert software engineer looking at a console message in DevTools.\nGiven a console message, give an explanation of what the console message means.\nStart with the explanation immediately without repeating the given console message.\nRespond only with the explanation, no console message.\n\n### Console message:\nScript snippet #1:1 Uncaught Error: Unexpected\\n    at Script snippet #1:1:7\\n(anonymous) @ Script snippet #1:1\n\n### Explanation:\nAn unexpected error has been thrown.\n\n### Code that threw an error:\n\n\\`\\`\\`\nthrow new Error('Unexpected');\n\\`\\`\\`\n---\n\n### Console message:\n${this.#consoleMessage.toExportString()}\n\n### Code that threw an error:\n\n\\`\\`\\`\n${relatedCode.join('\\n')}\n\\`\\`\\`\n\n### Explanation:`;\n  }\n}\n"]}